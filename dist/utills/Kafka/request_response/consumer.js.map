{"version":3,"sources":["../../../../src/utills/Kafka/request_response/consumer.js"],"names":["ConsumerFacade","require","ProducerFacade","AvroSerializer","RequestResponseConsumer","connectionString","topic","options","deserializer","serializer","genericSerializer","envelopeSchema","consumer","producerPromise","resolve","reject","then","subscribe","func","req","deserialize","envelope","payload","messages","length","msg","response","serialize","correlation_key","reply_topic","exception","total_messages","producer","send","empty","Buffer","e","err","toString","console","error","close","cb","catch","module","exports"],"mappings":"AAAA;;;AAGA;;;;;;;;;;;;;;;;AACA,IAAIA,iBAAiBC,QAAQ,mBAAR,CAArB;AAAA,IACIC,iBAAiBD,QAAQ,mBAAR,CADrB;AAAA,IAEIE,iBAAiBF,QAAQ,mBAAR,CAFrB;;IAIMG,uB,GAEF,iCAAYC,gBAAZ,EAA8BC,KAA9B,EAAqCC,OAArC,EAA8CC,YAA9C,EAA4DC,UAA5D,EAAwE;AAAA;;AAEpE,QAAIC,oBAAoB,IAAIP,cAAJ,CAAmBA,eAAeQ,cAAf,EAAnB,CAAxB;AAAA,QACIC,WAAW,IAAIZ,cAAJ,CAAmBK,gBAAnB,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDG,iBAArD,CADf;AAAA,QAEIG,kBAAkB,IAAIX,cAAJ,CAAmBG,gBAAnB,EAAqCK,iBAArC,CAFtB;;AAIA,WAAO,aAAY,UAACI,OAAD,EAAUC,MAAV,EAAqB;;AAEpCF,wBACKG,IADL,CACU;AAAA,mBAAYF,QACd;AACIG,yBADJ,qBACeC,IADf,EACqB;;AAEbN,6BAASK,SAAT,CAAmB,oBAAY;;AAE3B,4BAAIE,MAAMX,aAAaY,WAAb,CAAyBC,SAASC,OAAlC,CAAV;;AAEA,4BAAI;AACA,gCAAIC,WAAWL,KAAKC,GAAL,CAAf;;AAEA,gCAAII,SAASC,MAAT,GAAkB,CAAtB,EAAyB;AAAA;AAAA;AAAA;;AAAA;;AAErB,sEAAgBD,QAAhB,4GAA0B;AAAA,4CAAjBE,GAAiB;;;AAEtB,4CAAIC,WAAW;AACXJ,qDAASb,WAAWkB,SAAX,CAAqBF,GAArB,CADE;AAEXG,6DAAiBP,SAASO,eAFf;AAGXC,yDAAa,EAHF;AAIXC,uDAAW,EAJA;AAKXC,4DAAgBR,SAASC;AALd,yCAAf;;AAQAQ,iDAASC,IAAT,CAAcZ,SAASQ,WAAvB,EAAoCH,QAApC;AACH;AAboB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcxB,6BAdD,MAcO;;AAEH,oCAAIQ,QAAQ;AACRZ,6CAAS,IAAIa,MAAJ,CAAW,CAAX,CADD;AAERP,qDAAiBP,SAASO,eAFlB;AAGRC,iDAAa,EAHL;AAIRC,+CAAW,EAJH;AAKRC,oDAAgB;AALR,iCAAZ;;AAQAC,yCAASC,IAAT,CAAcZ,SAASQ,WAAvB,EAAoCK,KAApC;AACH;AAEJ,yBA9BD,CA8BE,OAAOE,CAAP,EAAU;;AAER,gCAAIC,MAAM;AACNf,yCAAS,IAAIa,MAAJ,CAAW,CAAX,CADH;AAENP,iDAAiBP,SAASO,eAFpB;AAGNC,6CAAa,EAHP;AAINC,2CAAWM,EAAEE,QAAF,EAJL;AAKNP,gDAAgB,CAAC,CALX,CAKa;AALb,6BAAV;;AAQAC,qCAASC,IAAT,CAAcZ,SAASQ,WAAvB,EAAoCQ,GAApC;AACH;AAEJ,qBA/CD,EA+CG;AAAA,+BAAOE,QAAQC,KAAR,CAAcH,GAAd,CAAP;AAAA,qBA/CH;AAgDH,iBAnDL;AAqDII,qBArDJ,iBAqDWC,EArDX,EAqDe;AACP9B,6BAAS6B,KAAT,CAAeC,EAAf;AACH;AAvDL,aADc,CAAZ;AAAA,SADV,EA2DKC,KA3DL,CA2DW;AAAA,mBAAO5B,OAAOsB,GAAP,CAAP;AAAA,SA3DX;AA4DH,KA9DM,CAAP;AA+DH,C;;AAGLO,OAAOC,OAAP,GAAiBzC,uBAAjB","file":"consumer.js","sourcesContent":["/**\r\n * Created by ALONHA on 11/08/2016.\r\n */\r\n'use strict';\r\nvar ConsumerFacade = require('../consumerFacade'),\r\n    ProducerFacade = require('../producerFacade'),\r\n    AvroSerializer = require('../avroSerializer');\r\n\r\nclass RequestResponseConsumer {\r\n\r\n    constructor(connectionString, topic, options, deserializer, serializer) {\r\n\r\n        var genericSerializer = new AvroSerializer(AvroSerializer.envelopeSchema()),\r\n            consumer = new ConsumerFacade(connectionString, topic, options, genericSerializer),\r\n            producerPromise = new ProducerFacade(connectionString, genericSerializer);\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            producerPromise\r\n                .then(producer => resolve(\r\n                    {\r\n                        subscribe (func) {\r\n\r\n                            consumer.subscribe(envelope => {\r\n\r\n                                var req = deserializer.deserialize(envelope.payload);\r\n\r\n                                try {\r\n                                    var messages = func(req);\r\n\r\n                                    if (messages.length > 0) {\r\n\r\n                                        for (let msg of messages) {\r\n\r\n                                            var response = {\r\n                                                payload: serializer.serialize(msg),\r\n                                                correlation_key: envelope.correlation_key,\r\n                                                reply_topic: '',\r\n                                                exception: '',\r\n                                                total_messages: messages.length\r\n                                            };\r\n\r\n                                            producer.send(envelope.reply_topic, response);\r\n                                        }\r\n                                    } else {\r\n\r\n                                        var empty = {\r\n                                            payload: new Buffer(0),\r\n                                            correlation_key: envelope.correlation_key,\r\n                                            reply_topic: '',\r\n                                            exception: '',\r\n                                            total_messages: 0\r\n                                        };\r\n\r\n                                        producer.send(envelope.reply_topic, empty);\r\n                                    }\r\n\r\n                                } catch (e) {\r\n\r\n                                    var err = {\r\n                                        payload: new Buffer(0),\r\n                                        correlation_key: envelope.correlation_key,\r\n                                        reply_topic: '',\r\n                                        exception: e.toString(),\r\n                                        total_messages: -1 /* error indication */\r\n                                    };\r\n\r\n                                    producer.send(envelope.reply_topic, err);\r\n                                }\r\n\r\n                            }, err => console.error(err));\r\n                        },\r\n\r\n                        close (cb) {\r\n                            consumer.close(cb);\r\n                        }\r\n                    }))\r\n                .catch(err => reject(err));\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = RequestResponseConsumer;"]}