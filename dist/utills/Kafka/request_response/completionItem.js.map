{"version":3,"sources":["../../../../src/utills/Kafka/request_response/completionItem.js"],"names":["CompletionItem","cb","deserializer","callbacks","counter","add","envelope","tot","total_messages","promises","exception","i","push","resolve","reject","err","data","deserialize","payload","module","exports"],"mappings":"AAAA;;;;;;;;;;;;IACMA,c,GAEF,wBAAYC,EAAZ,EAAgBC,YAAhB,EAA8B;AAAA;;AAE1B,QAAIC,YAAY,EAAhB;;AAEA,QAAIC,UAAU,IAAd;;AAEA,WAAO;AAEHC,WAFG,eAECC,QAFD,EAEW;;AAEV,gBAAIC,MAAMD,SAASE,cAAnB;;AAEA,gBAAIC,WAAW,EAAf;;AAEA,gBAAI,CAACL,OAAL,EAAc;;AAEV,wBAAQG,GAAR;AACI,yBAAK,CAAC,CAAN;AACIN,2BAAGK,SAASI,SAAZ,EAAuB,IAAvB;AACA,+BAAO,KAAP;;AAEJ,yBAAK,CAAL;AAAQ;AACJT,2BAAG,IAAH,EAASQ,QAAT;AACA,+BAAO,KAAP;;AAEJ;AACIL,kCAAU,CAAV;AACA,6BAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIJ,GAApB,EAAyBI,GAAzB,EAA8B;AAC1BF,qCAASG,IAAT,CAAc,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3CX,0CAAUS,IAAV,CAAe,UAACG,GAAD,EAAMC,IAAN;AAAA,2CAAeD,MAAMD,OAAOC,GAAP,CAAN,GAAoBF,QAAQG,IAAR,CAAnC;AAAA,iCAAf;AACH,6BAFa,CAAd;AAGH;AACDf,2BAAG,IAAH,EAASQ,QAAT;AAhBR;AAkBH;;AAEDN,sBAAUC,OAAV,EAAmB,IAAnB,EAAyBF,aAAae,WAAb,CAAyBX,SAASY,OAAlC,CAAzB;;AAEA,mBAAO,EAAEd,OAAF,GAAYG,GAAnB;AACH;AAjCE,KAAP;AAmCH,C;;AAGLY,OAAOC,OAAP,GAAiBpB,cAAjB","file":"completionItem.js","sourcesContent":["'use strict';\r\nclass CompletionItem {\r\n\r\n    constructor(cb, deserializer) {\r\n\r\n        var callbacks = [];\r\n\r\n        var counter = null;\r\n\r\n        return {\r\n\r\n            add(envelope) {\r\n\r\n                let tot = envelope.total_messages;\r\n\r\n                let promises = [];\r\n\r\n                if (!counter) {\r\n\r\n                    switch (tot) {\r\n                        case -1:\r\n                            cb(envelope.exception, null);\r\n                            return false;\r\n\r\n                        case 0: // empty result\r\n                            cb(null, promises)\r\n                            return false;\r\n\r\n                        default:\r\n                            counter = 0;\r\n                            for (let i = 0; i < tot; i++) {\r\n                                promises.push(new Promise((resolve, reject) => {\r\n                                    callbacks.push((err, data) => err ? reject(err) : resolve(data));\r\n                                }));\r\n                            }\r\n                            cb(null, promises);\r\n                    }\r\n                }\r\n\r\n                callbacks[counter](null, deserializer.deserialize(envelope.payload));\r\n\r\n                return ++counter < tot;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = CompletionItem;"]}