{"version":3,"sources":["../../../src/utills/Kafka/consumerFacade.js"],"names":["kafka","require","HighLevelConsumer","ConsumerFacade","connectionString","topic","options","serializer","autoCommit","encoding","sessionTimeout","highLevelConsumer","Client","consumer","subscribe","onmessage","onerror","on","msg","deserialize","rec","value","err","close","cb"],"mappings":"AAAA;;;AAGA;;;;;;;;;;;;AACA,IAAIA,QAAQC,QAAQ,YAAR,CAAZ;AAAA,IACIC,oBAAoBF,MAAME,iBAD9B;;IAGMC,c,GAEF,wBAAYC,gBAAZ,EAA8BC,KAA9B,EAAqCC,OAArC,EAA8CC,UAA9C,EAA0D;AAAA;;AAEtDD,YAAQE,UAAR,GAAqB,IAArB;AACAF,YAAQG,QAAR,GAAmB,QAAnB;AACAH,YAAQI,cAAR,GAAyB,KAAK,IAA9B;;AAEA,QAAIC,oBAAoB,IAAIT,iBAAJ,CAAsB,IAAIF,MAAMY,MAAV,CAAiBR,gBAAjB,CAAtB,EAA0D,CAAC,EAACC,OAAOA,KAAR,EAAD,CAA1D,EAA4EC,OAA5E,CAAxB;;AAEA,QAAIO,WAAW;AAEXC,iBAFW,qBAEAC,SAFA,EAEWC,OAFX,EAEoB;;AAE3BL,8BAAkBM,EAAlB,CAAqB,SAArB,EAAgC,eAAO;AACnC,oBAAIC,MAAMX,WAAWY,WAAX,CAAuBC,IAAIC,KAA3B,CAAV;AACAN,0BAAUG,GAAV;AACH,aAHD;;AAKAP,8BAAkBM,EAAlB,CAAqB,OAArB,EAA8B;AAAA,uBAAOD,QAAQM,GAAR,CAAP;AAAA,aAA9B;AACH,SAVU;AAYXC,aAZW,iBAYJC,EAZI,EAYA;AACPb,8BAAkBY,KAAlB,CAAwB,IAAxB,EAA8BC,EAA9B;AACH;AAdU,KAAf;;AAiBA,WAAOX,QAAP;AACH,C;;kBAGUV,c","file":"consumerFacade.js","sourcesContent":["/**\r\n * Created by ALONHA on 11/08/2016.\r\n */\r\n'use strict';\r\nvar kafka = require('kafka-node'),\r\n    HighLevelConsumer = kafka.HighLevelConsumer;\r\n\r\nclass ConsumerFacade {\r\n\r\n    constructor(connectionString, topic, options, serializer) {\r\n\r\n        options.autoCommit = true;\r\n        options.encoding = 'buffer';\r\n        options.sessionTimeout = 10 * 1000;\r\n\r\n        var highLevelConsumer = new HighLevelConsumer(new kafka.Client(connectionString), [{topic: topic}], options);\r\n\r\n        var consumer = {\r\n\r\n            subscribe (onmessage, onerror) {\r\n\r\n                highLevelConsumer.on('message', rec => {\r\n                    let msg = serializer.deserialize(rec.value);\r\n                    onmessage(msg);\r\n                });\r\n\r\n                highLevelConsumer.on('error', err => onerror(err));\r\n            },\r\n\r\n            close (cb) {\r\n                highLevelConsumer.close(true, cb);\r\n            }\r\n        };\r\n\r\n        return consumer;\r\n    }\r\n}\r\n\r\nexport default ConsumerFacade;"]}