{"version":3,"sources":["../../../src/utills/Kafka/uuid.js"],"names":["UUID","randomUUID","d","Date","getTime","uuid","replace","c","r","Math","random","floor","toString"],"mappings":"AAAA;;;;;AACA,IAAIA,OAAO;AACPC,cADO,wBACM;AACT,YAAIC,IAAI,IAAIC,IAAJ,GAAWC,OAAX,EAAR;AACA,YAAIC,OAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAa;AAC5E,gBAAIC,IAAI,CAACN,IAAIO,KAAKC,MAAL,KAAgB,EAArB,IAA2B,EAA3B,GAAgC,CAAxC;AACAR,gBAAIO,KAAKE,KAAL,CAAWT,IAAI,EAAf,CAAJ;AACA,mBAAO,CAACK,KAAK,GAAL,GAAWC,CAAX,GAAgBA,IAAI,GAAJ,GAAU,GAA3B,EAAiCI,QAAjC,CAA0C,EAA1C,CAAP;AACH,SAJU,CAAX;AAKA,eAAOP,IAAP;AACH;AATM,CAAX;;kBAYeL,I","file":"uuid.js","sourcesContent":["'use strict';\r\nlet UUID = {\r\n    randomUUID() {\r\n        var d = new Date().getTime();\r\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    }\r\n};\r\n\r\nexport default UUID;"]}